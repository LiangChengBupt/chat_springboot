<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chat.dao.MessageDao">

    <resultMap id="MessageResultMap" type="com.chat.entity.Message">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="fromId" column="from_id" jdbcType="INTEGER"/>
        <result property="toId" column="from_id" jdbcType="INTEGER"/>
        <result property="from" column="from" jdbcType="VARCHAR"/>
        <result property="to" column="to" jdbcType="VARCHAR"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="fromNickname" column="from_nickname" jdbcType="VARCHAR"/>
        <result property="fromUserProfile" column="from_user_profile" jdbcType="VARCHAR"/>
        <result property="messageTypeId" column="message_type_id" jdbcType="INTEGER"/>
    </resultMap>


    <!--查询单个-->
    <select id="queryById" resultMap="MessageResultMap">
        select
            id, from_id, to_id, `from`, `to`, content, create_time, from_nickname, from_user_profile, message_type_id
        from chatroom.msg_content
        where id = #{id}
    </select>

    <!--ToId查询-->
    <select id="queryByToId" resultMap="MessageResultMap">
        select
            id, from_id, to_id, `from`, `to`, content, create_time, from_nickname, from_user_profile, message_type_id
        from chatroom.msg_content
        where (from_id = #{fromId} and  to_id = #{toId}) or (from_id = #{toId} and  to_id = #{fromId})
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="MessageResultMap">
        select
        id, from_id, to_id, `from`, `to`, content, create_time, from_nickname, from_user_profile, message_type_id
        from chatroom.msg_content
        <if test="limit!=null and offset!=null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="MessageResultMap">
        select
        id, from_id, to_id, `from`, `to`, content, create_time, from_nickname, from_user_profile, message_type_id
        from chatroom.msg_content
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="fromId != null">
                and from_id = #{fromId}
            </if>
            <if test="toId != null">
                and to_id = #{toId}
            </if>
            <if test="from != null and from != ''">
                and `from` = #{from}
            </if>
            <if test="to != null and to != ''">
                and `to` = #{to}
            </if>
            <if test="content != null and content != ''">
                and content = #{content}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="fromNickname != null and fromNickname != ''">
                and from_nickname = #{fromNickname}
            </if>
            <if test="fromUserProfile != null and fromUserProfile != ''">
                and from_user_profile = #{fromUserProfile}
            </if>
            <if test="messageTypeId != null">
                and message_type_id = #{messageTypeId}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into chatroom.msg_content(from_id, to_id, `from`, `to`, content, create_time, from_nickname, from_user_profile, message_type_id)
        values (#{fromId}, #{toId}, #{from}, #{to}, #{content}, #{createTime}, #{fromNickname}, #{fromUserProfile}, #{messageTypeId})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update chatroom.msg_content
        <set>
            <if test="fromId != null">
                from_id = #{fromId},
            </if>
            <if test="toId != null">
                to_id = #{toId},
            </if>
            <if test="from != null and from != ''">
                `from` = #{from},
            </if>
            <if test="to != null and to != ''">
                `to` = #{to},
            </if>
            <if test="content != null and content != ''">
                content = #{content},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="fromNickname != null and fromNickname != ''">
                from_nickname = #{fromNickname},
            </if>
            <if test="fromUserProfile != null and fromUserProfile != ''">
                from_user_profile = #{fromUserProfile},
            </if>
            <if test="messageTypeId != null">
                message_type_id = #{messageTypeId},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from chatroom.msg_content where id = #{id}
    </delete>

    <select id="getAllMessageByPage" resultMap="MessageResultMap">
        select * from chatroom.msg_content where 1=1
        <if test="nickname!=null and nickname!=''">
            and from_nickname like concat('%',#{nickname},'%')
        </if>
        <if test="type!=null">
            and message_type_id=#{type}
        </if>
        <if test="dateScope!=null">
            and create_time between #{dateScope[0]} and #{dateScope[1]}
        </if>
        <if test="page!=null and size!=null">
            limit #{page},#{size}
        </if>
    </select>
    <select id="getTotal" resultType="java.lang.Long">
        select count(*) from chatroom.msg_content where 1=1
        <if test="nickname!=null and nickname!=''">
            and from_nickname like concat('%',#{nickname},'%')
        </if>
        <if test="type!=null">
            and message_type_id=#{type}
        </if>
        <if test="dateScope!=null and dateScope!=''">
            and create_time between #{dateScope[0]} and #{dateScope[1]}
        </if>
    </select>
    <delete id="deleteMessageByIds">
        delete from msg_content where id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>

</mapper>
